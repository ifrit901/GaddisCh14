package ch14java6thedition;

/**
 * This is programming challenge #3. It displays a drawing of 
 * two eyes that move around following the mouse when it enters
 * the window.
 * 
 * @author craig
 */
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
public class WatchMe extends JApplet {
	
	final int left_eyeX = 70;
	final int left_eyeY = 40;
	final int right_eyeX = 110;
	final int right_eyeY = 40;
	final int eye_width = 40;
	final int eye_height = 70;
	final int pupil_size = 15;

	boolean terminate = false;
	boolean mouseDown = false;

	// Enumeration to update mouse status
	enum mouse_status {STRAIGHT, UP, DOWN, LEFT, RIGHT};

	mouse_status status = mouse_status.STRAIGHT;

	// init method to start the applet adding mouse motion listener to 
	// the applet content pane.
	@Override
	public void init() {
		addMouseMotionListener(new MyMouseListener());
	}
	
	@Override
	public void paint(Graphics g) {
		super.paint(g);
		g.drawOval(left_eyeX, left_eyeY, eye_width, eye_height);
		g.drawOval(right_eyeX, right_eyeY, eye_width, eye_height);

		if (status == mouse_status.STRAIGHT) {
			// call eyesStraight method
			eyesStraight(g);
		} else if (status == mouse_status.UP) {
			// call eyesUp method
			eyesUp(g);
		} else if (status == mouse_status.DOWN) {
			// call eyesDown method
			eyesDown(g);
		} else if (status == mouse_status.LEFT) {
			// call eyesLeft method
			eyesLeft(g);
		} else if (status == mouse_status.RIGHT) {
			// call eyesRight method
			eyesRight(g);
		}
		
	}

	/**
	 * The eyesStraight method is called by paint when the 
	 * mouse status is down.
	 */
	public void eyesStraight(Graphics g) {
		g.fillOval(left_eyeX + (eye_width/2) - (pupil_size/2), 
			left_eyeY + (eye_height/2) - (pupil_size/2), 
			pupil_size, pupil_size);
		g.fillOval(right_eyeX + (eye_width/2) - (pupil_size/2), 
			right_eyeY + (eye_height/2) - (pupil_size/2), 
			pupil_size, pupil_size);

	}

	/**
	 * The eyesDown method is called by the paint method when the
	 * mouse's status is down.
	 */
	public void eyesDown(Graphics g) {
		g.fillOval(left_eyeX + (eye_width/2) - (pupil_size/2), 
			left_eyeY + eye_height - pupil_size, pupil_size, pupil_size);
		g.fillOval(right_eyeX + (eye_width/2) - (pupil_size/2), 
			right_eyeY + eye_height - pupil_size, pupil_size, pupil_size);
	}

	/**
	 * The eyesLeft method is called by paint when the mouse status
	 * is left.
	 */
	public void eyesLeft(Graphics g) {
		g.fillOval(left_eyeX,  left_eyeY + (eye_height/2) - (pupil_size/2), 
			pupil_size, pupil_size);
		g.fillOval(right_eyeX, left_eyeY + (eye_height/2) - (pupil_size/2), 
			pupil_size, pupil_size);
	}

	/**
	 * The eyesRight method is called by paint when the mouse status
	 * is right.
	 */
	public void eyesRight(Graphics g) {
		g.fillOval(left_eyeX + (eye_width - pupil_size), 
			left_eyeY + (eye_height/2) - (pupil_size/2), 
			pupil_size, pupil_size);
		g.fillOval(right_eyeX + (eye_width - pupil_size), 
			left_eyeY + (eye_height/2) - (pupil_size/2), 
			pupil_size, pupil_size);
	}

	/**
	 * The eyesUp method is called by the paint method when
	 * the mouse status is up.
	 */
	public void eyesUp(Graphics g) {
		g.fillOval(left_eyeX + (eye_width/2) - (pupil_size/2), 
			left_eyeY, pupil_size, pupil_size);
		g.fillOval(right_eyeX + (eye_width/2) - (pupil_size/2), 
			right_eyeY, pupil_size, pupil_size);

	}

	/**
	 * Private inner class to handle events generated by the mouse
	 * moving around the content pane.
	 */
	private class MyMouseListener implements MouseMotionListener {
		@Override
		public void mouseDragged(MouseEvent e) {

		}
		@Override 
		public void mouseMoved(MouseEvent e) {
			// check condition if the current mouse x-position
			// is less than the left_eyeX
			if (e.getX() < left_eyeX) {
				status = mouse_status.LEFT;
			} 
			// check condition if the current mouse x-position
			// is greater than the right_eyeX
			else if (e.getX() > right_eyeX) {
				status = mouse_status.RIGHT;
			}
			// check condition if the current mouse y-position
			// is less than the eye_height
			else if (e.getY() < eye_height) {
				status = mouse_status.UP;
			}
			// check condition if the current eye y-position
			// is greater than left_eyeY + eye_height
			else if (e.getY() > left_eyeY + eye_height) {
				status = mouse_status.DOWN;
			}
			else
				// otherwise the eye status is straight
				status = mouse_status.STRAIGHT;

				repaint();
		}
	}
}
