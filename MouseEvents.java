package ch14java6thedition;

/**
 * The MouseEvents applet shows the mouse events 
 * as they occur.
 * @author craig
 */
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
public class MouseEvents extends JApplet {
	
	private JTextField [] mouseStates;
	private String [] text = {"Pressed", "Clicked", "Released", "Entered",
			     "Exited", "Dragged", "X: ", "Y: "};

	/**
	 * init method.
	 */
	@Override
	public void init() {

		// Create a Layout Manager
		setLayout(new FlowLayout());

		// Create the array of text fields
		mouseStates = new JTextField [8];
		for (int i = 0; i < mouseStates.length; i++) {
			mouseStates[i] = new JTextField(text[i], 10);
			mouseStates[i].setEditable(false);
			add(mouseStates[i]);
		}

		// Add a mouse listener to this applet
		addMouseListener(new MyMouseListener());

		// Add a mouse motion listener to this applet
		addMouseMotionListener(new MyMouseMotionListener());

	}

	/**
	 * The clearTextFields sets all the text backgrounds 
	 * to light gray.
	 */
	public void clearTextFields() {

		for (int i = 0; i < 6; i++) {
			mouseStates[i].setBackground(Color.lightGray);
		}

	}

	/**
	 * Private inner class that handles the events generated by the 
	 * mouse events. When an event occurs, the text field that generated 
	 * the event is given a yellow background.
	 */
	private class MyMouseListener implements MouseListener {

		@Override
		public void mousePressed(MouseEvent e) {
			clearTextFields();
			mouseStates[0].setBackground(Color.yellow);
		}
		@Override
		public void mouseReleased(MouseEvent e) {
			clearTextFields();
			mouseStates[1].setBackground(Color.yellow);
		}
		@Override
		public void mouseClicked(MouseEvent e) {
			clearTextFields();
			mouseStates[2].setBackground(Color.yellow);
		}
		@Override
		public void mouseEntered(MouseEvent e) {
			clearTextFields();
			mouseStates[3].setBackground(Color.yellow);
		}
		@Override 
		public void mouseExited(MouseEvent e) {
			clearTextFields();
			mouseStates[4].setBackground(Color.yellow);
		}
	}

	/**
	 * Private inner class handling the events of mouse motion.
	 */
	private class MyMouseMotionListener implements MouseMotionListener {

		@Override
		public void mouseDragged(MouseEvent e) {
			clearTextFields();
			mouseStates[5].setBackground(Color.yellow);

		}
		@Override
		public void mouseMoved(MouseEvent e) {
			clearTextFields();
			mouseStates[6].setText(text[6] + ": " + e.getX());
			mouseStates[7].setText(text[7] + ": " + e.getY());
		}

	}

}
